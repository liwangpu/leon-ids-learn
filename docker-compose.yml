version: "3.4"

services:

  App.IDS.Server:
    container_name: appidsserver-c
    image: appidsserver
    build:
      context: .
      dockerfile: App.IDS.Server/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    volumes:
      - "/var/ids-tutorial/appidsserver/logs:/app/logs"
    ports:
      - "5000:80"
    networks:
      - idstestnet
    restart: always

  App.OMS.Server:
    container_name: appomsserver-c
    image: appomsserver
    build:
      context: .
      dockerfile: App.OMS.Server/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    volumes:
      - "/var/ids-tutorial/appomsserver/logs:/app/logs"
    ports:
      - "5001:80"
    networks:
      - idstestnet
    restart: always

  App.SMS.Server:
    container_name: appsmsserver-c
    image: appsmsserver
    build:
      context: .
      dockerfile: App.SMS.Server/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    volumes:
      - "/var/ids-tutorial/appsmsserver/logs:/app/logs"
    ports:
      - "5002:80"
    networks:
      - idstestnet
    restart: always

  App.APIGateway.Server:
    container_name: appapigatewayserver-c
    image: appapigatewayserver
    build:
      context: .
      dockerfile: App.APIGateway.Server/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    volumes:
      - "/var/ids-tutorial/appapigatewayserver/logs:/app/logs"
    ports:
      - "6000:80"
    networks:
      - idstestnet
    restart: always

networks:
  idstestnet:

  
